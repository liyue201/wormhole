/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestNFT, TestNFTInterface } from "../TestNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintGlitter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600781526615195cdd13919560ca1b6020808301918252835180850190945260048452631513919560e21b9084015281519192916200005d916000916200007c565b508051620000739060019060208401906200007c565b5050506200015f565b8280546200008a9062000122565b90600052602060002090601f016020900481019282620000ae5760008555620000f9565b82601f10620000c957805160ff1916838001178555620000f9565b82800160010185558215620000f9579182015b82811115620000f9578251825591602001919060010190620000dc565b50620001079291506200010b565b5090565b5b808211156200010757600081556001016200010c565b600181811c908216806200013757607f821691505b602082108114156200015957634e487b7160e01b600052602260045260246000fd5b50919050565b611588806200016f6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a22cb46511610066578063a22cb465146101d6578063b88d4fde146101e9578063c87b56dd146101fc578063e985e9c51461020f57600080fd5b806370a08231146101a5578063719f3d06146101c657806395d89b41146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780636352211e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004611250565b61024b565b60405190151581526020015b60405180910390f35b61011f61029d565b60405161010e9190611338565b61013f61013a366004611288565b61032f565b6040516001600160a01b03909116815260200161010e565b61016a610165366004611227565b6103c9565b005b61016a61017a3660046110dd565b6104df565b61016a61018d3660046110dd565b610510565b61013f6101a0366004611288565b61052b565b6101b86101b3366004611091565b6105a2565b60405190815260200161010e565b6101b8610629565b61011f610655565b61016a6101e43660046111ed565b610664565b61016a6101f7366004611118565b610729565b61011f61020a366004611288565b610761565b61010261021d3660046110ab565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061027c57506001600160e01b03198216635b5e139f60e01b145b8061029757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102ac9061145d565b80601f01602080910402602001604051908101604052809291908181526020018280546102d89061145d565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103ad5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103d48261052b565b9050806001600160a01b0316836001600160a01b031614156104425760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103a4565b336001600160a01b038216148061045e575061045e813361021d565b6104d05760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103a4565b6104da838361076c565b505050565b6104e933826107da565b6105055760405162461bcd60e51b81526004016103a49061139d565b6104da8383836108d1565b6104da83838360405180602001604052806000815250610729565b6000818152600260205260408120546001600160a01b0316806102975760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103a4565b60006001600160a01b03821661060d5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103a4565b506001600160a01b031660009081526003602052604090205490565b6000610639600780546001019055565b600061064460075490565b90506106503382610a71565b919050565b6060600180546102ac9061145d565b6001600160a01b0382163314156106bd5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103a4565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61073333836107da565b61074f5760405162461bcd60e51b81526004016103a49061139d565b61075b84848484610bb3565b50505050565b606061029782610be6565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906107a18261052b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108535760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103a4565b600061085e8361052b565b9050806001600160a01b0316846001600160a01b031614806108995750836001600160a01b031661088e8461032f565b6001600160a01b0316145b806108c957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166108e48261052b565b6001600160a01b03161461094c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103a4565b6001600160a01b0382166109ae5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103a4565b6109b960008261076c565b6001600160a01b03831660009081526003602052604081208054600192906109e290849061141a565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a109084906113ee565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610ac75760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103a4565b6000818152600260205260409020546001600160a01b031615610b2c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103a4565b6001600160a01b0382166000908152600360205260408120805460019290610b559084906113ee565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610bbe8484846108d1565b610bca84848484610d58565b61075b5760405162461bcd60e51b81526004016103a49061134b565b6000818152600260205260409020546060906001600160a01b0316610c675760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103a4565b60008281526006602052604081208054610c809061145d565b80601f0160208091040260200160405190810160405280929190818152602001828054610cac9061145d565b8015610cf95780601f10610cce57610100808354040283529160200191610cf9565b820191906000526020600020905b815481529060010190602001808311610cdc57829003601f168201915b505050505090506000610d0a610e65565b9050805160001415610d1d575092915050565b815115610d4f578082604051602001610d379291906112cc565b60405160208183030381529060405292505050919050565b6108c984610e85565b60006001600160a01b0384163b15610e5a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610d9c9033908990889088906004016112fb565b602060405180830381600087803b158015610db657600080fd5b505af1925050508015610de6575060408051601f3d908101601f19168201909252610de39181019061126c565b60015b610e40573d808015610e14576040519150601f19603f3d011682016040523d82523d6000602084013e610e19565b606091505b508051610e385760405162461bcd60e51b81526004016103a49061134b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108c9565b506001949350505050565b606060405180606001604052806030815260200161152360309139905090565b6000818152600260205260409020546060906001600160a01b0316610f045760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103a4565b6000610f0e610e65565b90506000815111610f2e5760405180602001604052806000815250610f59565b80610f3884610f60565b604051602001610f499291906112cc565b6040516020818303038152906040525b9392505050565b606081610f845750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610fae5780610f9881611498565b9150610fa79050600a83611406565b9150610f88565b60008167ffffffffffffffff811115610fd757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611001576020820181803683370190505b5090505b84156108c95761101660018361141a565b9150611023600a866114b3565b61102e9060306113ee565b60f81b81838151811061105157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611073600a86611406565b9450611005565b80356001600160a01b038116811461065057600080fd5b6000602082840312156110a2578081fd5b610f598261107a565b600080604083850312156110bd578081fd5b6110c68361107a565b91506110d46020840161107a565b90509250929050565b6000806000606084860312156110f1578081fd5b6110fa8461107a565b92506111086020850161107a565b9150604084013590509250925092565b6000806000806080858703121561112d578081fd5b6111368561107a565b93506111446020860161107a565b925060408501359150606085013567ffffffffffffffff80821115611167578283fd5b818701915087601f83011261117a578283fd5b81358181111561118c5761118c6114f3565b604051601f8201601f19908116603f011681019083821181831017156111b4576111b46114f3565b816040528281528a60208487010111156111cc578586fd5b82602086016020830137918201602001949094529598949750929550505050565b600080604083850312156111ff578182fd5b6112088361107a565b91506020830135801515811461121c578182fd5b809150509250929050565b60008060408385031215611239578182fd5b6112428361107a565b946020939093013593505050565b600060208284031215611261578081fd5b8135610f5981611509565b60006020828403121561127d578081fd5b8151610f5981611509565b600060208284031215611299578081fd5b5035919050565b600081518084526112b8816020860160208601611431565b601f01601f19169290920160200192915050565b600083516112de818460208801611431565b8351908301906112f2818360208801611431565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061132e908301846112a0565b9695505050505050565b602081526000610f5960208301846112a0565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611401576114016114c7565b500190565b600082611415576114156114dd565b500490565b60008282101561142c5761142c6114c7565b500390565b60005b8381101561144c578181015183820152602001611434565b8381111561075b5750506000910152565b600181811c9082168061147157607f821691505b6020821081141561149257634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156114ac576114ac6114c7565b5060010190565b6000826114c2576114c26114dd565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461151f57600080fd5b5056fe68747470733a2f2f6170692e7772617070656470756e6b732e636f6d2f6170692f70756e6b732f6d657461646174612fa26469706673582212204cd0aa1a397a3625a705d9f1658314b218e15b338d4f910b688e44d6c1680a4764736f6c63430008040033";

export class TestNFT__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestNFT> {
    return super.deploy(overrides || {}) as Promise<TestNFT>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestNFT {
    return super.attach(address) as TestNFT;
  }
  connect(signer: Signer): TestNFT__factory {
    return super.connect(signer) as TestNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestNFTInterface {
    return new utils.Interface(_abi) as TestNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestNFT {
    return new Contract(address, _abi, signerOrProvider) as TestNFT;
  }
}
